.TH UGREP "1" "May 02, 2019" "ugrep 1.1.0" "User Commands"
.SH NAME
\fBugrep\fR -- universal file pattern searcher
.SH SYNOPSIS
.B ugrep
[\fB-bcEFfGgHhikLlmnoqsTtVvwXxZz\fR] [\fB--colour\fR[=\fIwhen\fR]|\fB--color\fR[=\fIwhen\fR]]
      [\fB--file-format\fR=\fIencoding\fR] [\fB--label\fR[=\fIlabel\fR]]
      [\fB-e\fR \fIpattern\fR] [\fIpattern\fR] [\fIfile\fR \fI...\fR]
.SH DESCRIPTION
The \fBugrep\fR utility searches any given input files, selecting lines that
match one or more patterns.  By default, a pattern matches an input line if the
regular expression (RE) in the pattern matches the input line without its
trailing newline.  An empty expression matches every line.  Each input line
that matches at least one of the patterns is written to the standard output.
.PP
The \fBugrep\fR utility normalizes Unicode input, so \fBugrep\fR can be used to
search for Unicode patterns in text files encoded in UTF-8, UTF-16, UTF-32 by
detecting UTF BOM in the input.  When no UTF BOM is detected, \fBugrep\fR
searches for Unicode patterns in UTF-8 input, which includes ASCII input.
\fBugrep\fR searches input files encoded in ISO-8859-1, EBCDIC, CP-437, CP-850,
CP-858, CP-1250 to CP-1258 when the file encoding format is specified with
option --file-format.
.PP
The following options are available:
.TP
\fB\-b\fR, \fB\-\-byte\-offset\fR
The offset in bytes of a matched pattern is displayed in front of
the respective matched line.
.TP
\fB\-c\fR, \fB\-\-count\fR
Only a count of selected lines is written to standard output.
When used with option \fB\-g\fR, counts the number of patterns matched.
.TP
\fB\-\-colour\fR[=\fI\fR\fIwhen\fR], \fB\-\-color\fR[=\fI\fR\fIwhen\fR]
Mark up the matching text with the expression stored in the
GREP_COLOR or GREP_COLORS environment variable.  The possible
values of when can be `never', `always' or `auto'.
.TP
\fB\-E\fR, \fB\-\-extended\-regexp\fR
Interpret patterns as extended regular expressions (EREs). This is
the default.
.TP
\fB\-e\fR pattern, \fB\-\-regexp\fR=\fIpattern\fR
Specify a pattern used during the search of the input: an input
line is selected if it matches any of the specified patterns.
This option is most useful when multiple \fB\-e\fR options are used to
specify multiple patterns, or when a pattern begins with a dash
(`\fB\-'\fR) or when option \fB\-f\fR is used.
.TP
\fB\-F\fR, \fB\-\-fixed\-strings\fR
Interpret pattern as a set of fixed strings (i.e. force ugrep to
behave as fgrep but less efficiently).
.TP
\fB\-f\fR file, \fB\-\-file\fR=\fIfile\fR
Read one or more newline separated patterns from file.  Empty
pattern lines in the file are ignored.  Options \fB\-F\fR, \fB\-w\fR, and \fB\-x\fR
do not apply to these patterns.  If file does not exist, uses
the GREP_PATH environment variable to open file.
.TP
\fB\-\-file\-format\fR=\fIencoding\fR
The input file format.  The possible values of encoding can be:
binary ISO\-8859\-1 ASCII EBCDIC UTF\-8 UTF\-16 UTF\-16BE UTF\-16LE
UTF\-32 UTF\-32BE UTF\-32LE CP437 CP850 CP1250 CP1251 CP1252
CP1253 CP1254 CP1255 CP1256 CP1257 CP1258
.TP
\fB\-G\fR, \fB\-\-basic\-regexp\fR
Interpret pattern as a basic regular expression (i.e. force ugrep
to behave as traditional grep).
.TP
\fB\-g\fR, \fB\-\-no\-group\fR
Do not group pattern matches on the same line.  Display the
matched line again for each additional pattern match.
.TP
\fB\-H\fR, \fB\-\-with\-filename\fR
Always print the filename with output lines.  This is the default
when there is more than one file to search.
.TP
\fB\-h\fR, \fB\-\-no\-filename\fR
Never print filenames with output lines.
.TP
\fB\-?\fR, \fB\-\-help\fR
Print a help message.
.TP
\fB\-i\fR, \fB\-\-ignore\-case\fR
Perform case insensitive matching. This option applies
case\-insensitive matching of ASCII characters in the input.
By default, ugrep is case sensitive.
.TP
\fB\-k\fR, \fB\-\-column\-number\fR
The column number of a matched pattern is displayed in front of
the respective matched line, starting at column 1.  Tabs are
expanded before columns are counted.
.TP
\fB\-L\fR, \fB\-\-files\-without\-match\fR
Only the names of files not containing selected lines are written
to standard output.  Pathnames are listed once per file searched.
If the standard input is searched, the string ``(standard input)''
is written.
.TP
\fB\-l\fR, \fB\-\-files\-with\-matches\fR
Only the names of files containing selected lines are written to
standard output.  ugrep will only search a file until a match has
been found, making searches potentially less expensive.  Pathnames
are listed once per file searched.  If the standard input is
searched, the string ``(standard input)'' is written.
.TP
\fB\-\-label\fR[=\fI\fR\fIlabel\fR]
Displays the label value when input is read from standard input
where a file name would normally be printed in the output.  This
option applies to options \fB\-H\fR, \fB\-L\fR, and \fB\-l\fR.
.TP
\fB\-m\fR num, \fB\-\-max\-count\fR=\fInum\fR
Stop reading the input after num matches.
.TP
\fB\-n\fR, \fB\-\-line\-number\fR
Each output line is preceded by its relative line number in the
file, starting at line 1.  The line number counter is reset for
each file processed.
.TP
\fB\-o\fR, \fB\-\-only\-matching\fR
Prints only the matching part of the lines.  Allows a pattern
match to span multiple lines.
.TP
\fB\-q\fR, \fB\-\-quiet\fR, \fB\-\-silent\fR
Quiet mode: suppress normal output.  ugrep will only search a file
until a match has been found, making searches potentially less
expensive.  Allows a pattern match to span multiple lines.
.TP
\fB\-s\fR, \fB\-\-no\-messages\fR
Silent mode.  Nonexistent and unreadable files are ignored (i.e.
their error messages are suppressed).
.TP
\fB\-T\fR, \fB\-\-initial\-tab\fR
Add a tab space to separate the file name, line number, column
number, byte offset with the matched line.
.TP
\fB\-t\fR size, \fB\-\-tabs\fR=\fIsize\fR
Set the tab size to 1, 2, 4, or 8 to expand tabs for option \fB\-k\fR.
.TP
\fB\-V\fR, \fB\-\-version\fR
Display version information and exit.
.TP
\fB\-v\fR, \fB\-\-invert\-match\fR
Selected lines are those not matching any of the specified
patterns.
.TP
\fB\-w\fR, \fB\-\-word\-regexp\fR
The pattern or \fB\-e\fR patterns are searched for as a word (as if
surrounded by `\\<' and `\\>').
.TP
\fB\-X\fR, \fB\-\-free\-space\fR
Spacing (blanks and tabs) in regular expressions are ignored.
.TP
\fB\-x\fR, \fB\-\-line\-regexp\fR
Only input lines selected against the entire pattern or \fB\-e\fR patterns
are considered to be matching lines (as if surrounded by ^ and $).
.TP
\fB\-Z\fR, \fB\-\-null\fR
Prints a zero\-byte after the file name.
.TP
\fB\-z\fR sep, \fB\-\-separator\fR=\fIsep\fR
The separator between the file name, line number, column number,
byte offset, and the line matched.  The default is a colon (`:').
.PP
The regular expression pattern syntax is an extended form of the POSIX ERE
syntax.  For an overview of the syntax see README.md or visit:
.IP
https://github.com/Genivia/ugrep
.PP
Note that `.' matches any non-newline character.  Matching a newline character
is not possible in line-buffered mode.  Pattern matches may span multiple lines
in block-buffered mode, which is enabled by one of the options \fB-c\fR,
\fB-o\fR, or \fB-q\fR (unless combined with option \fB-v\fR).
.PP
If no file arguments are specified, or if `-' is specified, the standard input
is used.
.SH "EXIT STATUS"
The \fBugrep\fR utility exits with one of the following values:
.IP 0
One or more lines were selected.
.IP 1
No lines were selected.
.IP >1
An error occurred.
.SH ENVIRONMENT
.IP \fBGREP_PATH\fR
May be used to specify a file path to pattern files.  The file path is used by
option -f to open a pattern file, when the file specified with option -f cannot
be opened.
.IP \fBGREP_COLOR\fR
May be used to specify ANSI SGR parameters to highlight matches when option
\fB--color\fR is used, e.g. 1;35;40 shows pattern matches in bold magenta text
on a black background.
.IP \fBGREP_COLORS\fR
May be used to specify ANSI SGR parameters to highlight matches and other
attributes when option \fB--color\fR is used.  Its value is a colon-separated
list of ANSI SGR parameters that defaults to
\fBmt=1;31:fn=35:ln=32:cn=32:bn=32:se=36\fR.  The \fBmt=\fR,
\fBms=\fR, and \fBmc=\fR capabilities of \fBGREP_COLORS\fR have priority over
\fBGREP_COLOR\fR.
.SH GREP_COLORS
.IP \fBsl=\fR
SGR substring for selected lines.
.IP \fBcx=\fR
SGR substring for context lines.
.IP \fBrv\fR
Swaps the \fBsl=\fR and \fBcx=\fR capabilities when \fB-v\fR is specified.
.IP \fBmt=\fR
SGR substring for matching text in any matching line.
.IP \fBms=\fR
SGR substring for matching text in a selected line.  The substring \fBmt=\fR by
default.
.IP \fBmc=\fR
SGR substring for matching text in a context line.  The substring \fBmt=\fR by
default.
.IP \fBfn=\fR
SGR substring for file names.
.IP \fBln=\fR
SGR substring for line numbers.
.IP \fBcn=\fR
SGR substring for column numbers.
.IP \fBbn=\fR
SGR substring for byte offsets.
.IP \fBse=\fR
SGR substring for separators.
.SH EXAMPLES
To find all occurrences of the word `patricia' in a file:
.IP
$ ugrep -w 'patricia' myfile
.PP
To count the number of lines containing the word `patricia' or `Patricia` in a
file:
.IP
$ ugrep -cw '[Pp]atricia' myfile
.PP
To count the total number of times the word `patricia' or `Patricia` occur in a
file:
.IP
$ ugrep -cgw '[Pp]atricia' myfile
.PP
To list all Unicode words in a file:
.IP
$ ugrep -o '\\w+' myfile
.PP
To list all ASCII words in a file:
.IP
$ ugrep -o '[[:word:]]+' myfile
.PP
To list all laughing face emojis (Unicode code points U+1F600 to U+1F60F) in a file:
.IP
$ ugrep -o '[\\x{1F600}-\\x{1F60F}]' myfile
.PP
To check if a file contains any non-ASCII (i.e. Unicode) characters:
.IP
$ ugrep -q '[^[:ascii:]]' myfile && echo "contains Unicode"
.PP
To list all C/C++ comments in a file displaying their line and column numbers
using options \fB-n\fR and \fB-k\fR, and option \fB-o\fR that allows for
matching patterns across multiple lines:
.IP
$ ugrep -nko -e '//.*' -e '/\\*([^*]|(\\*+[^*/]))*\\*+\\/' myfile
.PP
The same search, but using pre-defined patterns:
.IP
$ ugrep -nko -f patterns/c_comments myfile
.PP
To list the lines that need fixing in a C/C++ source file by looking for the
word FIXME while skipping any FIXME in quoted strings by using a negative
pattern `(?^X)' to ignore quoted strings:
.IP
$ ugrep -no -e 'FIXME' -e '(?^"(\\\\.|\\\\\\r?\\n|[^\\\\\\n"])*")' myfile
.SH BUGS
Report bugs at:
.IP
https://github.com/Genivia/ugrep/issues
.PP
.SH LICENSE
\fBugrep\fR is released under the BSD\-3 license.  All parts of the software
have reasonable copyright terms permitting free redistribution.  This includes
the ability to reuse all or parts of the ugrep source tree.
.SH "SEE ALSO"
grep(1).
