.TH UGREP "1" "May 12, 2019" "ugrep 1.1.0" "User Commands"
.SH NAME
\fBugrep\fR -- universal file pattern searcher
.SH SYNOPSIS
.B ugrep
[\fIOPTIONS\fR] [-A NUM] [-B NUM] [-C[NUM]] [\fIPATTERN\fR] [\fB-e\fR \fIPATTERN\fR]
      [\fB-f\fR \fIFILE\fR] [\fB--file-type\fR=\fITYPES\fR] [\fB--file-format\fR=\fIENCODING\fR]
      [\fB--colour\fR[=\fIWHEN\fR]|\fB--color\fR[=\fIWHEN\fR]] [\fB--label\fR[=\fILABEL\fR]] [\fIFILE\fR \fI...\fR]
.SH DESCRIPTION
The \fBugrep\fR utility searches any given input files, selecting lines that
match one or more patterns.  By default, a pattern matches an input line if the
regular expression (RE) in the pattern matches the input line without its
trailing newline.  An empty expression matches every line.  Each input line
that matches at least one of the patterns is written to the standard output.
To search for patterns that span multiple lines, use option \fB-o\fR.
.PP
The \fBugrep\fR utility normalizes and decodes encoded input to search for the
specified ASCII/Unicode patterns.  When the input contains a UTF BOM indicating
UTF-8, UTF-16, or UTF-32 input then \fBugrep\fR always normalizes the input to
UTF-8.  When no UTF BOM is present, \fBugrep\fR assumes the input is ASCII,
UTF-8, or raw binary.  To specify a different input file encoding, use option
\fB--file-format\fR.
.PP
The following options are available:
.TP
\fB\-A\fR NUM, \fB\-\-after\-context\fR=\fINUM\fR
Print NUM lines of trailing context after matching lines.  Places
a \fB\-\-group\-separator\fR between contiguous groups of matches.  See also
the \fB\-B\fR and \fB\-C\fR options.
.TP
\fB\-B\fR NUM, \fB\-\-before\-context\fR=\fINUM\fR
Print NUM lines of leading context before matching lines.  Places
a \fB\-\-group\-separator\fR between contiguous groups of matches.  See also
the \fB\-A\fR and \fB\-C\fR options.
.TP
\fB\-b\fR, \fB\-\-byte\-offset\fR
The offset in bytes of a matched line is displayed in front of the
respective matched line.  With option \fB\-g\fR displays the offset in
bytes of each pattern matched.  Byte offsets represent the position
of the match in the normalized input, i.e. binary, ASCII, UTF\-8.
.TP
\fB\-C\fR[NUM], \fB\-\-context\fR[=\fI\fR\fINUM\fR]
Print NUM lines of leading and trailing context surrounding each
match.  The default is 2 and is equivalent to \fB\-A\fR 2 \fB\-B\fR 2.  Places
a \fB\-\-group\-separator\fR between contiguous groups of matches.  Note:
no whitespace may be given between the option and its argument.
.TP
\fB\-c\fR, \fB\-\-count\fR
Only a count of selected lines is written to standard output.
When used with option \fB\-g\fR, counts the number of patterns matched.
With option \fB\-v\fR, counts the number of non\-matching lines.
.TP
\fB\-\-colour\fR[=\fI\fR\fIWHEN\fR], \fB\-\-color\fR[=\fI\fR\fIWHEN\fR]
Mark up the matching text with the expression stored in the
GREP_COLOR or GREP_COLORS environment variable.  The possible
values of WHEN can be `never', `always' or `auto'.
.TP
\fB\-D\fR ACTION, \fB\-\-devices\fR=\fIACTION\fR
If an input file is a device, FIFO or socket, use ACTION to process
it.  By default, ACTION is `read', which means that devices are
read just as if they were ordinary files.  If ACTION is `skip',
devices are silently skipped.
.TP
\fB\-d\fR ACTION, \fB\-\-directories\fR=\fIACTION\fR
If an input file is a directory, use ACTION to process it.  By
default, ACTION is `read', i.e., read directories just as if they
were ordinary files.  If ACTION is `skip', silently skip
directories.  If ACTION is `recurse', read all files under each
directory, recursively, following symbolic links only if they are
on the command line.  This is equivalent to the \fB\-r\fR option.  If
ACTION is `dereference\-recurse', read all files under each
directory, recursively, following symbolic links.  This is
equivalent to the \fB\-R\fR option.
.TP
\fB\-E\fR, \fB\-\-extended\-regexp\fR
Interpret patterns as extended regular expressions (EREs). This is
the default.
.TP
\fB\-e\fR PATTERN, \fB\-\-regexp\fR=\fIPATTERN\fR
Specify a PATTERN used during the search of the input: an input
line is selected if it matches any of the specified patterns.
This option is most useful when multiple \fB\-e\fR options are used to
specify multiple patterns, when a pattern begins with a dash (`\fB\-'\fR),
or to specify a pattern after option \fB\-f\fR.
.TP
\fB\-\-exclude\fR=\fIGLOB\fR
Skip files whose name matches GLOB (using wildcard matching). A
glob can use *, ?, and [...] as wildcards, and \\ to quote a
wildcard or backslash character literally.  If GLOB contains /,
full pathnames are matched.  Otherwise basenames are matched.  Note
that \fB\-\-exclude\fR patterns take priority over \fB\-\-include\fR patterns.
This option may be repeated.
.TP
\fB\-\-exclude\-dir\fR=\fIGLOB\fR
Exclude directories whose name matches GLOB from recursive
searches.  If GLOB contains /, full pathnames are matched.
Otherwise basenames are matched.  Note that \fB\-\-exclude\-dir\fR patterns
take priority over \fB\-\-include\-dir\fR patterns.  This option may be
repeated.
.TP
\fB\-\-exclude\-from\fR=\fIFILE\fR
Read the globs from FILE and skip files and directories whose name
matches one or more globs (as if specified by \fB\-\-exclude\fR and
\fB\-\-exclude\-dir\fR).  Lines starting with a `#' and empty lines in FILE
ignored. This option may be repeated.
.TP
\fB\-F\fR, \fB\-\-fixed\-strings\fR
Interpret pattern as a set of fixed strings, separated by newlines,
any of which is to be matched.  This forces ugrep to behave as
fgrep but less efficiently.
.TP
\fB\-f\fR FILE, \fB\-\-file\fR=\fIFILE\fR
Read one or more newline\-separated patterns from FILE.  Empty
pattern lines in the file are not processed.  Options \fB\-F\fR, \fB\-w\fR, and
\-x do not apply to FILE patterns.  If FILE does not exist, uses
the GREP_PATH environment variable to attempt to open FILE. This
option may be repeated.
.TP
\fB\-G\fR, \fB\-\-basic\-regexp\fR
Interpret pattern as a basic regular expression (i.e. force ugrep
to behave as traditional grep).
.TP
\fB\-g\fR, \fB\-\-no\-group\fR
Do not group pattern matches on the same line.  Display the matched
line again for each additional pattern match, using `+' as the
field separator for each additional line.
.TP
\fB\-\-group\-separator\fR=\fISEP\fR
Use SEP as a group separator for context options \fB\-A\fR, \fB\-B\fR, and \fB\-C\fR. By
default SEP is a double hyphen (`\fB\-\-\fR').
.TP
\fB\-H\fR, \fB\-\-with\-filename\fR
Always print the filename with output lines.  This is the default
when there is more than one file to search.
.TP
\fB\-h\fR, \fB\-\-no\-filename\fR
Never print filenames with output lines.
.TP
\fB\-\-help\fR
Print a help message.
.TP
\fB\-i\fR, \fB\-\-ignore\-case\fR
Perform case insensitive matching. This option applies
case\-insensitive matching of ASCII characters in the input.
By default, ugrep is case sensitive.
.TP
\fB\-\-include\fR=\fIGLOB\fR
Search only files whose name matches GLOB (using wildcard
matching).  A glob can use *, ?, and [...] as wildcards, and \\ to
quote a wildcard or backslash character literally.  If GLOB
contains /, file pathnames are matched.  Otherwise file basenames
are matched.  Note that \fB\-\-exclude\fR patterns take priority over
\fB\-\-include\fR patterns.  This option may be repeated.
.TP
\fB\-\-include\-dir\fR=\fIGLOB\fR
Only directories whose name matches GLOB are included in recursive
searches.  If GLOB contains /, full pathnames are matched.
Otherwise basenames are matched.  Note that \fB\-\-exclude\-dir\fR patterns
take priority over \fB\-\-include\-dir\fR patterns.  This option may be
repeated.
.TP
\fB\-\-include\-from\fR=\fIFILE\fR
Read the globs from FILE and search only files and directories
whose name matches one or more globs (as if specified by \fB\-\-include\fR
and \fB\-\-include\-dir\fR).  Lines starting with a `#' and empty lines in
FILE are ignored.  This option may be repeated.
.TP
\fB\-k\fR, \fB\-\-column\-number\fR
The column number of a matched pattern is displayed in front of
the respective matched line, starting at column 1.  Tabs are
expanded when columns are counted.
.TP
\fB\-L\fR, \fB\-\-files\-without\-match\fR
Only the names of files not containing selected lines are written
to standard output.  Pathnames are listed once per file searched.
If the standard input is searched, the string ``(standard input)''
is written.
.TP
\fB\-l\fR, \fB\-\-files\-with\-matches\fR
Only the names of files containing selected lines are written to
standard output.  ugrep will only search a file until a match has
been found, making searches potentially less expensive.  Pathnames
are listed once per file searched.  If the standard input is
searched, the string ``(standard input)'' is written.
.TP
\fB\-\-label\fR[=\fI\fR\fILABEL\fR]
Displays the LABEL value when input is read from standard input
where a file name would normally be printed in the output.  This
option applies to options \fB\-H\fR, \fB\-L\fR, and \fB\-l\fR.
.TP
\fB\-\-line\-buffered\fR
Force output to be line buffered.  By default, output is line
buffered when standard output is a terminal and block buffered
otherwise.
.TP
\fB\-m\fR NUM, \fB\-\-max\-count\fR=\fINUM\fR
Stop reading the input after NUM matches.
.TP
\fB\-N\fR, \fB\-\-only\-line\-number\fR
The line number of the match in the file is output without
displaying the match.  The line number counter is reset for each
file processed.
.TP
\fB\-n\fR, \fB\-\-line\-number\fR
Each output line is preceded by its relative line number in the
file, starting at line 1.  The line number counter is reset for
each file processed.
.TP
\fB\-\-no\-group\-separator\fR
Removes the group separator line from the output for context
options \fB\-A\fR, \fB\-B\fR, and \fB\-C\fR.
.TP
\fB\-O\fR EXTENSIONS, \fB\-\-file\-extensions\fR=\fIEXTENSIONS\fR
Search only files whose file name extensions match the specified
comma\-separated list of file name EXTENSIONS.  This option is the
same as specifying \fB\-\-include\fR=\fI\fR'*.ext' for each extension name `ext'
in the EXTENSIONS list.  This option may be repeated.
.TP
\fB\-o\fR, \fB\-\-only\-matching\fR
Prints only the matching part of the lines.  Allows a pattern
match to span multiple lines.  Line numbers for multi\-line matches
are displayed with option \fB\-n\fR, using `|' as the field separator for
each additional line matched by the pattern.  Context options \fB\-A\fR,
\-B, and \fB\-C\fR are disabled.
.TP
\fB\-P\fR, \fB\-\-perl\-regexp\fR
Interpret PATTERN as a Perl regular expression.  This feature is
not yet available.
.TP
\fB\-p\fR, \fB\-\-no\-dereference\fR
If \fB\-R\fR is specified, no symbolic links are followed.  This is the
default.
.TP
\fB\-q\fR, \fB\-\-quiet\fR, \fB\-\-silent\fR
Quiet mode: suppress normal output.  ugrep will only search a file
until a match has been found, making searches potentially less
expensive.  Allows a pattern match to span multiple lines.
.TP
\fB\-R\fR, \fB\-\-dereference\-recursive\fR
Recursively read all files under each directory.  Follow all
symbolic links, unlike \fB\-r\fR.
.TP
\fB\-r\fR, \fB\-\-recursive\fR
Recursively read all files under each directory, following symbolic
links only if they are on the command line.
.TP
\fB\-S\fR, \fB\-\-dereference\fR
If \fB\-R\fR is specified, all symbolic links are followed.  The default
is not to follow symbolic links.
.TP
\fB\-s\fR, \fB\-\-no\-messages\fR
Silent mode.  Nonexistent and unreadable files are ignored (i.e.
their error messages are suppressed).
.TP
\fB\-T\fR, \fB\-\-initial\-tab\fR
Add a tab space to separate the file name, line number, column
number, and byte offset with the matched line.
.TP
\fB\-t\fR TYPES, \fB\-\-file\-type\fR=\fITYPES\fR
Search only files associated with TYPES, a comma\-separated list of
file types.  Each file type corresponds to a set of file name
extensions to search.  This option may be repeated.  The possible
values of type can be (use \fB\-t\fR list to display a detailed list):
`actionscript', `ada', `asm', `asp', `aspx', `autoconf', `automake',
`awk', `basic', `batch', `bison', `c', `c++', `clojure',
`csharp', `css', `csv', `dart', `delphi', `elixir', `erlang',
`fortran', `go', `groovy', `haskell', `html', `jade', `java',
`javascript', `json', `jsp', `julia', `kotlin', `less', `lex',
`lisp', `lua', `m4', `make', `matlab', `objc', `objc++',
`ocaml', `parrot', `pascal', `perl', `php', `prolog', `python',
`R', `rst', `ruby', `rust', `scala', `scheme', `shell',
`smalltalk', `sql', `swift', `tcl', `tex', `text', `tt',
`typescript', `verilog', `vhdl', `vim', `xml', `yacc', `yaml'
.TP
\fB\-\-tabs\fR=\fINUM\fR
Set the tab size to NUM to expand tabs for option \fB\-k\fR.  The value of
NUM may be 1, 2, 4, or 8.
.TP
\fB\-V\fR, \fB\-\-version\fR
Display version information and exit.
.TP
\fB\-v\fR, \fB\-\-invert\-match\fR
Selected lines are those not matching any of the specified
patterns.
.TP
\fB\-w\fR, \fB\-\-word\-regexp\fR
The pattern or \fB\-e\fR patterns are searched for as a word (as if
surrounded by `\\<' and `\\>').
.TP
\fB\-X\fR, \fB\-\-free\-space\fR
Spacing (blanks and tabs) in regular expressions are ignored.
.TP
\fB\-x\fR, \fB\-\-line\-regexp\fR
Only input lines selected against the entire pattern or \fB\-e\fR patterns
are considered to be matching lines (as if surrounded by ^ and $).
.TP
\fB\-Y\fR ENCODING, \fB\-\-file\-format\fR=\fIENCODING\fR
The input file format.  The possible values of ENCODING can be:
`binary', `ISO\-8859\-1', `ASCII', `EBCDIC', `UTF\-8', `UTF\-16',
`UTF\-16BE', `UTF\-16LE', `UTF\-32', `UTF\-32BE', `UTF\-32LE', `CP437',
`CP850', `CP1250', `CP1251', `CP1252', `CP1253', `CP1254',
`CP1255', `CP1256', `CP1257', `CP1258'
.TP
\fB\-y\fR
Equivalent to \fB\-i\fR.  Obsoleted.
.TP
\fB\-Z\fR, \fB\-\-null\fR
Prints a zero\-byte after the file name.
.TP
\fB\-z\fR SEP, \fB\-\-separator\fR=\fISEP\fR
Use SEP as field separator between file name, line number, column
number, byte offset, and the matched line.  The default is a colon
(`:').
.PP
The regular expression pattern syntax is an extended form of the POSIX ERE
syntax.  For an overview of the syntax see README.md or visit:
.IP
https://github.com/Genivia/ugrep
.PP
Note that `.' matches any non-newline character.  Matching a newline character
`\\n' is not possible unless one of the options \fB-c\fR, \fB-L\fR,
\fB-l\fR, \fB-N\fR, \fB-o\fR, or \fB-q\fR is used (in any combination, but not
combined with option \fB-v\fR) to allow a pattern match to span multiple lines.
.PP
If no file arguments are specified, or if `-' is specified, the standard input
is used.
.SH "EXIT STATUS"
The \fBugrep\fR utility exits with one of the following values:
.IP 0
One or more lines were selected.
.IP 1
No lines were selected.
.IP >1
An error occurred.
.SH GLOBBING
Globbing is used by options \fB--include\fR, \fB--include-dir\fR,
\fB--include-from\fR, \fB--exclude\fR, \fB--exclude-dir\fR,
\fB--exclude-from\fR to match pathnames and basenames.  Globbing supports
gitignore syntax and the corresponding matching rules.  When a glob contains a
path separator `/', the pathname is matched.  Otherwise the basename of a file
or directory is matched.  For example, \fB*.h\fR matches \fIfoo.h\fR and
\fIbar/foo.h\fR.  \fBbar/*.h\fR matches \fIbar/foo.h\fR but not \fIfoo.h\fR and
not \fIbar/bar/foo.h\fR.  Use a leading `/' to force \fB/*.h\fR to match
\fIfoo.h\fR but not \fIbar/foo.h\fR.
.PP
Syntax:
.IP \fB**/\fR
Matches zero or more directories.
.IP \fB/**\fR
When at the end of a glob, matches everything after the /.
.IP \fB*\fR
Matches anything except a /.
.IP \fB/\fR
When used at the begin of a glob, matches if pathname has no /.
.IP \fB?\fR
Matches any character except a /.
.IP \fB[a-z]\fR
Matches one character in the selected range of characters.
.IP \fB[^a-z]\fR
Matches one character not in the selected range of characters.
.IP \fB[!a-z]\fR
Matches one character not in the selected range of characters.
.IP \fB\\\\?\fR
Matches a ? (or any character specified after the backslash).
.PP
Examples:
.IP \fB**/a\fR
Matches a, x/a, x/y/a,       but not b, x/b.
.IP \fBa/**/b\fR
Matches a/b, a/x/b, a/x/y/b, but not x/a/b, a/b/x
.IP \fBa/**\fR
Matches a/x, a/y, a/x/y,     but not b/x
.IP \fBa/*/b\fR
Matches a/x/b, a/y/b,        but not a/x/y/b
.IP \fB/a\fR
Matches a,                   but not x/a
.IP \fB/*\fR
Matches a, b,                but not x/a, x/b
.IP \fBa?b\fR
Matches axb, ayb,            but not a, b, ab
.IP \fBa[xy]b\fR
Matches axb, ayb             but not a, b, azb
.IP \fBa[a-z]b\fR
Matches aab, abb, acb, azb,  but not a, b, a3b, aAb, aZb
.IP \fBa[^xy]b\fR
Matches aab, abb, acb, azb,  but not a, b, axb, ayb
.IP \fBa[^a-z]b\fR
Matches a3b, aAb, aZb        but not a, b, aab, abb, acb, azb
.PP
Lines in the \fB--exclude-from\fR and \fB--include-from\fR files are ignored
when empty or start with a `#'.  The prefix `!' to a glob in such a file
negates the pattern match, i.e. matching files are excluded except files
matching the globs prefixed with `!' in the \fB--exclude-from\fR file.
.SH ENVIRONMENT
.IP \fBGREP_PATH\fR
May be used to specify a file path to pattern files.  The file path is used by
option -f to open a pattern file, when the file specified with option -f cannot
be opened.
.IP \fBGREP_COLOR\fR
May be used to specify ANSI SGR parameters to highlight matches when option
\fB--color\fR is used, e.g. 1;35;40 shows pattern matches in bold magenta text
on a black background.
.IP \fBGREP_COLORS\fR
May be used to specify ANSI SGR parameters to highlight matches and other
attributes when option \fB--color\fR is used.  Its value is a colon-separated
list of ANSI SGR parameters that defaults to
\fBmt=1;31:sl=:cx=:fn=35:ln=32:cn=32:bn=32:se=36\fR.  The \fBmt=\fR,
\fBms=\fR, and \fBmc=\fR capabilities of \fBGREP_COLORS\fR have priority over
\fBGREP_COLOR\fR.
.SH GREP_COLORS
.IP \fBsl=\fR
SGR substring for selected lines.
.IP \fBcx=\fR
SGR substring for context lines.
.IP \fBrv\fR
Swaps the \fBsl=\fR and \fBcx=\fR capabilities when \fB-v\fR is specified.
.IP \fBmt=\fR
SGR substring for matching text in any matching line.
.IP \fBms=\fR
SGR substring for matching text in a selected line.  The substring \fBmt=\fR by
default.
.IP \fBmc=\fR
SGR substring for matching text in a context line.  The substring \fBmt=\fR by
default.
.IP \fBfn=\fR
SGR substring for file names.
.IP \fBln=\fR
SGR substring for line numbers.
.IP \fBcn=\fR
SGR substring for column numbers.
.IP \fBbn=\fR
SGR substring for byte offsets.
.IP \fBse=\fR
SGR substring for separators.
.SH EXAMPLES
To find all occurrences of the word `patricia' in a file:
.IP
$ ugrep -w 'patricia' myfile
.PP
To count the number of lines containing the word `patricia' or `Patricia` in a
file:
.IP
$ ugrep -cw '[Pp]atricia' myfile
.PP
To count the total number of times the word `patricia' or `Patricia` occur in a
file:
.IP
$ ugrep -cgw '[Pp]atricia' myfile
.PP
To list all Unicode words in a file:
.IP
$ ugrep -o '\\w+' myfile
.PP
To list all ASCII words in a file:
.IP
$ ugrep -o '[[:word:]]+' myfile
.PP
To list all laughing face emojis (Unicode code points U+1F600 to U+1F60F) in a file:
.IP
$ ugrep -o '[\\x{1F600}-\\x{1F60F}]' myfile
.PP
To check if a file contains any non-ASCII (i.e. Unicode) characters:
.IP
$ ugrep -q '[^[:ascii:]]' myfile && echo "contains Unicode"
.PP
To list all C/C++ comments in a file displaying their line and column numbers
using options \fB-n\fR and \fB-k\fR, and option \fB-o\fR that allows for
matching patterns across multiple lines:
.IP
$ ugrep -nko -e '//.*' -e '/\\*([^*]|(\\*+[^*/]))*\\*+\\/' myfile
.PP
The same search, but using pre-defined patterns:
.IP
$ ugrep -nko -f patterns/c_comments myfile
.PP
To list the lines that need fixing in a C/C++ source file by looking for the
word FIXME while skipping any FIXME in quoted strings by using a negative
pattern `(?^X)' to ignore quoted strings:
.IP
$ ugrep -no -e 'FIXME' -e '(?^"(\\\\.|\\\\\\r?\\n|[^\\\\\\n"])*")' myfile
.SH BUGS
Report bugs at:
.IP
https://github.com/Genivia/ugrep/issues
.PP
.SH LICENSE
\fBugrep\fR is released under the BSD\-3 license.  All parts of the software
have reasonable copyright terms permitting free redistribution.  This includes
the ability to reuse all or parts of the ugrep source tree.
.SH "SEE ALSO"
grep(1).
